{
  "version": 4,
  "terraform_version": "1.0.11",
  "serial": 396,
  "lineage": "7df758bc-07a9-6061-5c19-cf79f156b7a0",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "aws_iam_role",
      "name": "ecs_task_execution_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::402878705062:role/ecsTaskExecutionRole",
            "assume_role_policy": "{\"Version\":\"2008-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2019-03-31T20:33:32Z",
            "description": "",
            "id": "ecsTaskExecutionRole",
            "max_session_duration": 3600,
            "name": "ecsTaskExecutionRole",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "unique_id": "AROAV3TLRFWTLICPVOJRM"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "api_logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-west-2:402878705062:log-group:api-logs",
            "id": "api-logs",
            "kms_key_id": "",
            "name": "api-logs",
            "name_prefix": null,
            "retention_in_days": 0,
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "airquality_repo",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:us-west-2:402878705062:repository/airquality-repo",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "id": "airquality-repo",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "airquality-repo",
            "registry_id": "402878705062",
            "repository_url": "402878705062.dkr.ecr.us-west-2.amazonaws.com/airquality-repo",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_ecs_cluster",
      "name": "airquality_web",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecs:us-west-2:402878705062:cluster/airquality-web",
            "capacity_providers": [],
            "configuration": [
              {
                "execute_command_configuration": [
                  {
                    "kms_key_id": "",
                    "log_configuration": [
                      {
                        "cloud_watch_encryption_enabled": true,
                        "cloud_watch_log_group_name": "api-logs",
                        "s3_bucket_encryption_enabled": false,
                        "s3_bucket_name": "",
                        "s3_key_prefix": ""
                      }
                    ],
                    "logging": "OVERRIDE"
                  }
                ]
              }
            ],
            "default_capacity_provider_strategy": [],
            "id": "arn:aws:ecs:us-west-2:402878705062:cluster/airquality-web",
            "name": "airquality-web",
            "setting": [
              {
                "name": "containerInsights",
                "value": "disabled"
              }
            ],
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_cloudwatch_log_group.api_logs"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_ecs_service",
      "name": "airquality_api",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "capacity_provider_strategy": [],
            "cluster": "arn:aws:ecs:us-west-2:402878705062:cluster/airquality-web",
            "deployment_circuit_breaker": [
              {
                "enable": false,
                "rollback": false
              }
            ],
            "deployment_controller": [
              {
                "type": "ECS"
              }
            ],
            "deployment_maximum_percent": 200,
            "deployment_minimum_healthy_percent": 100,
            "desired_count": 0,
            "enable_ecs_managed_tags": false,
            "enable_execute_command": false,
            "force_new_deployment": null,
            "health_check_grace_period_seconds": 0,
            "iam_role": "aws-service-role",
            "id": "arn:aws:ecs:us-west-2:402878705062:service/airquality-web/airquality-api",
            "launch_type": "FARGATE",
            "load_balancer": [],
            "name": "airquality-api",
            "network_configuration": [
              {
                "assign_public_ip": true,
                "security_groups": [],
                "subnets": [
                  "subnet-06e55213c335afde8"
                ]
              }
            ],
            "ordered_placement_strategy": [],
            "placement_constraints": [],
            "platform_version": "LATEST",
            "propagate_tags": "NONE",
            "scheduling_strategy": "REPLICA",
            "service_registries": [],
            "tags": {},
            "tags_all": {},
            "task_definition": "arn:aws:ecs:us-west-2:402878705062:task-definition/airquality-webapp:4",
            "timeouts": null,
            "wait_for_steady_state": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "aws_ecs_task_definition.airquality_webapp",
            "data.aws_iam_role.ecs_task_execution_role",
            "aws_cloudwatch_log_group.api_logs",
            "aws_ecs_cluster.airquality_web"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_ecs_task_definition",
      "name": "airquality_webapp",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ecs:us-west-2:402878705062:task-definition/airquality-webapp:4",
            "container_definitions": "[{\"cpu\":0,\"environment\":[],\"essential\":true,\"image\":\"402878705062.dkr.ecr.us-west-2.amazonaws.com/airquality-repo:airquality_api\",\"mountPoints\":[],\"name\":\"airquality-api\",\"portMappings\":[{\"containerPort\":5000,\"hostPort\":5000,\"protocol\":\"tcp\"}],\"volumesFrom\":[]}]",
            "cpu": "256",
            "ephemeral_storage": [],
            "execution_role_arn": "arn:aws:iam::402878705062:role/ecsTaskExecutionRole",
            "family": "airquality-webapp",
            "id": "airquality-webapp",
            "inference_accelerator": [],
            "ipc_mode": "",
            "memory": "512",
            "network_mode": "awsvpc",
            "pid_mode": "",
            "placement_constraints": [],
            "proxy_configuration": [],
            "requires_compatibilities": [
              "FARGATE"
            ],
            "revision": 4,
            "tags": {},
            "tags_all": {},
            "task_role_arn": "",
            "volume": []
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_iam_role.ecs_task_execution_role"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_dev",
      "mode": "data",
      "type": "archive_file",
      "name": "lambda_airquality_archive",
      "provider": "provider[\"registry.terraform.io/hashicorp/archive\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "excludes": null,
            "id": "0a21318d75b83b87d3a16524fa5f2f856246cf0f",
            "output_base64sha256": "z4GYYYA5rSpQgmWsvuJExmXDdn43X8Tr2mrTCYQT9Z8=",
            "output_file_mode": null,
            "output_md5": "f87e253f3b04ea91b7125e580024e99e",
            "output_path": "./airquality.zip",
            "output_sha": "0a21318d75b83b87d3a16524fa5f2f856246cf0f",
            "output_size": 2937,
            "source": [
              {
                "content": "",
                "filename": "app/__init__.py"
              },
              {
                "content": "import dataclasses\n\nclass Particle:\n    TWO_POINT_FIVE = '2.5'\n    TEN = '10'\n\n@dataclasses.dataclass\nclass AQILevel:\n    level_name: str\n    conc_low: float\n    conc_high: float\n    aqi_low: int\n    aqi_high: int\n\nAQI_BREAKPOINTS = [\n    ('Good', 0, 50),\n    ('Moderate', 51, 100),\n    ('USG', 101, 150),\n    ('Unhealth', 151, 200),\n    ('Very Unhealthy', 201, 300),\n    ('Hazardous', 301, 500)\n]\n\nLEVELS_25 = [\n    (0, 12),\n    (12.1, 35.4),\n    (35.5, 55.4),\n    (55.5, 150.4),\n    (150.5, 250.4),\n    (250.5, 500.4)\n]\n\nLEVELS_10 = [\n    (0, 54),\n    (55, 154),\n    (155, 254),\n    (255, 354),\n    (355, 424),\n    (425, 604),\n]\n\ndef get_aqi(conc: float, particle: Particle) -\u003e float:\n    if particle == Particle.TWO_POINT_FIVE:\n        levels = LEVELS_25\n        conc = round(conc, 1)\n    else:\n        levels = LEVELS_10\n        conc = round(conc)\n\n    aqi_levels = [\n        AQILevel(breaks[0], lvl[0], lvl[1], breaks[1], breaks[2])\n        for breaks, lvl in zip(AQI_BREAKPOINTS, levels)\n    ]\n\n    for level in aqi_levels:\n        if conc \u003e level.conc_high:\n            continue\n        else:\n            break\n\n    aqi = ((level.aqi_high - level.aqi_low)/(level.conc_high-level.conc_low)) * (conc - level.conc_low) + level.aqi_low\n    return round(aqi)\n\n\nif __name__ == \"__main__\":\n    print(get_aqi(20, LEVELS_25))",
                "filename": "app/aqi.py"
              },
              {
                "content": "import dataclasses\nimport json\nimport os\nfrom collections import defaultdict\nfrom datetime import datetime, timedelta\n\nfrom boto3.dynamodb.conditions import Key\n\nfrom app.aqi import get_aqi, Particle\nfrom app.connection import readings\n\nTIME_INTERVAL_MINUTES = 20\nDEV_ENVIRON_LAST_DAY = datetime.fromisoformat(\"2021-11-27T20:33:06\")\n\nif os.environ.get('FLASK_ENV') == 'development':\n    last_day = DEV_ENVIRON_LAST_DAY\nelse:\n    last_day = datetime.now() - timedelta(days=1)\n \n \ndef get_last_day(resource=readings, last_day=last_day):\n    items = resource.query(\n        TableName='Readings',\n        KeyConditionExpression=Key('RecordedAt').gt(last_day.isoformat()) \u0026 Key('DeviceId').eq('2A84')\n    )['Items']\n\n    items = sorted(items, key=lambda x: x['RecordedAt'])\n    for res in items:\n        yield datetime.fromisoformat(res['RecordedAt']), float(res['pmi2.5']), float(res['pmi10'])\n\n@dataclasses.dataclass\nclass TimingResponse:\n    recorded_at: datetime\n    aqi_two_point_five: int\n    aqi_ten: int\n \ndef timing_results_to_buckets(results):\n    bucket_marker = results[0].recorded_at \n    buckets = defaultdict(list)\n    for result in results:\n        if result.recorded_at \u003e bucket_marker + timedelta(\n            minutes=TIME_INTERVAL_MINUTES\n        ):\n            bucket_marker = result.recorded_at\n        buckets[bucket_marker].append(result)\n    return buckets\n\ndef average_aqi_from_buckets(buckets):\n    response = []\n    for marker, bucket in buckets.items():\n        two_point_five = [a.aqi_two_point_five for a in bucket]\n        ten = [a.aqi_ten for a in bucket]\n        response.append([\n            marker.isoformat(),\n            round(sum(two_point_five)/len(two_point_five)),\n            round(sum(ten)/len(ten))\n        ])\n    return response\n\ndef get_last_day_bucketed_aqi():\n    results = [\n        TimingResponse(\n            a[0],\n            get_aqi(a[1],Particle.TWO_POINT_FIVE),\n            get_aqi(a[2], Particle.TEN)\n        )\n        for a in get_last_day()\n    ]\n\n    buckets = timing_results_to_buckets(results)\n    return average_aqi_from_buckets(buckets)\n\n",
                "filename": "app/response.py"
              },
              {
                "content": "import datetime\n\nfrom app.connection import client\n\n\ndef dynamo_put(client, device, pmi25, pmi10, recorded_at=None):\n    client.put_item(\n        TableName='Readings',\n        Item={\n            'DeviceId': {\"S\": device},\n            'RecordedAt': {\n                \"S\": recorded_at or datetime.datetime.now().isoformat()\n            },\n            'pmi2.5': {\"N\": str(pmi25)},\n            'pmi10': {\"N\": str(pmi10)}\n        }\n    )\n\ndef write_reading(device, pmi25, pmi10):\n    dynamo_put(client, device, pmi25, pmi10)",
                "filename": "app/reading.py"
              },
              {
                "content": "import json\n\nfrom app.response import get_last_day_bucketed_aqi\nfrom app.reading import write_reading\n\ndef handler(event=None, context=None):\n    if event.get('httpMethod') == \"POST\":\n        data = json.loads(event['body'])\n        write_reading(\n           device=data['device_id'],\n           pmi25=data['pmi2.5'],\n           pmi10=data['pmi10']\n        )\n        body = f'written {event}'\n    else:\n        body = json.dumps(get_last_day_bucketed_aqi())\n\n    response = {\n        'isBase64Encoded': False,\n        \"statusCode\": 200,\n        \"headers\": {},\n        \"body\": body\n    }\n    return response",
                "filename": "app/lambda.py"
              },
              {
                "content": "import os\n\nimport boto3\n\nparameters = {'service_name': 'dynamodb'}\nif os.environ.get('FLASK_ENV') == \"development\":\n    parameters['endpoint_url'] = 'http://dynamodb-local:8000'\n\nclient = boto3.client(**parameters)\nresource = boto3.resource(**parameters)\nreadings = resource.Table('Readings')",
                "filename": "app/connection.py"
              }
            ],
            "source_content": null,
            "source_content_filename": null,
            "source_dir": null,
            "source_file": null,
            "type": "zip"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.airquality_dev",
      "mode": "managed",
      "type": "aws_apigatewayv2_api",
      "name": "lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_endpoint": "https://i2d54e8j98.execute-api.us-west-2.amazonaws.com",
            "api_key_selection_expression": "$request.header.x-api-key",
            "arn": "arn:aws:apigateway:us-west-2::/apis/i2d54e8j98",
            "body": null,
            "cors_configuration": [
              {
                "allow_credentials": false,
                "allow_headers": [
                  "content-type"
                ],
                "allow_methods": [
                  "GET",
                  "OPTIONS",
                  "POST"
                ],
                "allow_origins": [
                  "*"
                ],
                "expose_headers": [],
                "max_age": 300
              }
            ],
            "credentials_arn": null,
            "description": "",
            "disable_execute_api_endpoint": false,
            "execution_arn": "arn:aws:execute-api:us-west-2:402878705062:i2d54e8j98",
            "fail_on_warnings": null,
            "id": "i2d54e8j98",
            "name": "airquality_gateway_dev",
            "protocol_type": "HTTP",
            "route_key": null,
            "route_selection_expression": "$request.method $request.path",
            "tags": {},
            "tags_all": {},
            "target": null,
            "version": ""
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.airquality_dev",
      "mode": "managed",
      "type": "aws_apigatewayv2_integration",
      "name": "airquality_reading_data",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_id": "i2d54e8j98",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling_strategy": "",
            "credentials_arn": "",
            "description": "",
            "id": "xehh1ts",
            "integration_method": "POST",
            "integration_response_selection_expression": "",
            "integration_subtype": "",
            "integration_type": "AWS_PROXY",
            "integration_uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:402878705062:function:airquality-web-dev/invocations",
            "passthrough_behavior": "",
            "payload_format_version": "1.0",
            "request_parameters": {},
            "request_templates": {},
            "response_parameters": [],
            "template_selection_expression": "",
            "timeout_milliseconds": 30000,
            "tls_config": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_dev.aws_apigatewayv2_api.lambda",
            "module.airquality_dev.aws_iam_role.lambda_exec",
            "module.airquality_dev.aws_lambda_function.airquality_app",
            "module.airquality_dev.aws_s3_bucket.airquality_lambda_bucket",
            "module.airquality_dev.aws_s3_bucket_object.lambda_package",
            "module.airquality_dev.data.archive_file.lambda_airquality_archive"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_dev",
      "mode": "managed",
      "type": "aws_apigatewayv2_route",
      "name": "get_readings",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_id": "i2d54e8j98",
            "api_key_required": false,
            "authorization_scopes": [],
            "authorization_type": "NONE",
            "authorizer_id": "",
            "id": "zta6b7e",
            "model_selection_expression": "",
            "operation_name": "",
            "request_models": {},
            "request_parameter": [],
            "route_key": "GET /data",
            "route_response_selection_expression": "",
            "target": "integrations/xehh1ts"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_dev.aws_s3_bucket.airquality_lambda_bucket",
            "module.airquality_dev.aws_s3_bucket_object.lambda_package",
            "module.airquality_dev.data.archive_file.lambda_airquality_archive",
            "module.airquality_dev.aws_apigatewayv2_api.lambda",
            "module.airquality_dev.aws_apigatewayv2_integration.airquality_reading_data",
            "module.airquality_dev.aws_iam_role.lambda_exec",
            "module.airquality_dev.aws_lambda_function.airquality_app"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_dev",
      "mode": "managed",
      "type": "aws_apigatewayv2_stage",
      "name": "lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_log_settings": [
              {
                "destination_arn": "arn:aws:logs:us-west-2:402878705062:log-group:/aws/api_gw/airquality_gateway_dev",
                "format": "{\"httpMethod\":\"$context.httpMethod\",\"integrationErrorMessage\":\"$context.integrationErrorMessage\",\"protocol\":\"$context.protocol\",\"requestId\":\"$context.requestId\",\"requestTime\":\"$context.requestTime\",\"resourcePath\":\"$context.resourcePath\",\"responseLength\":\"$context.responseLength\",\"routeKey\":\"$context.routeKey\",\"sourceIp\":\"$context.identity.sourceIp\",\"status\":\"$context.status\"}"
              }
            ],
            "api_id": "i2d54e8j98",
            "arn": "arn:aws:apigateway:us-west-2::/apis/i2d54e8j98/stages/dev",
            "auto_deploy": true,
            "client_certificate_id": "",
            "default_route_settings": [
              {
                "data_trace_enabled": false,
                "detailed_metrics_enabled": false,
                "logging_level": "",
                "throttling_burst_limit": 0,
                "throttling_rate_limit": 0
              }
            ],
            "deployment_id": "txab9x",
            "description": "",
            "execution_arn": "arn:aws:execute-api:us-west-2:402878705062:i2d54e8j98/dev",
            "id": "dev",
            "invoke_url": "https://i2d54e8j98.execute-api.us-west-2.amazonaws.com/dev",
            "name": "dev",
            "route_settings": [],
            "stage_variables": {},
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_dev.aws_apigatewayv2_api.lambda",
            "module.airquality_dev.aws_cloudwatch_log_group.api_gw"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_dev",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "airquality_web",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-west-2:402878705062:log-group:/aws/lambda/airquality-web-dev",
            "id": "/aws/lambda/airquality-web-dev",
            "kms_key_id": "",
            "name": "/aws/lambda/airquality-web-dev",
            "name_prefix": null,
            "retention_in_days": 30,
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_dev.aws_s3_bucket.airquality_lambda_bucket",
            "module.airquality_dev.aws_s3_bucket_object.lambda_package",
            "module.airquality_dev.data.archive_file.lambda_airquality_archive",
            "module.airquality_dev.aws_iam_role.lambda_exec",
            "module.airquality_dev.aws_lambda_function.airquality_app"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_dev",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "api_gw",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-west-2:402878705062:log-group:/aws/api_gw/airquality_gateway_dev",
            "id": "/aws/api_gw/airquality_gateway_dev",
            "kms_key_id": "",
            "name": "/aws/api_gw/airquality_gateway_dev",
            "name_prefix": null,
            "retention_in_days": 30,
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_dev.aws_apigatewayv2_api.lambda"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_dev",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "readings",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-west-2:402878705062:table/dev-readings",
            "attribute": [
              {
                "name": "DeviceId",
                "type": "S"
              },
              {
                "name": "RecordedAt",
                "type": "S"
              }
            ],
            "billing_mode": "PAY_PER_REQUEST",
            "global_secondary_index": [],
            "hash_key": "DeviceId",
            "id": "dev-readings",
            "local_secondary_index": [],
            "name": "dev-readings",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": "RecordedAt",
            "read_capacity": 0,
            "replica": [],
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false,
                "kms_key_arn": ""
              }
            ],
            "write_capacity": 0
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.airquality_dev",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "lambda_dynamo_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::402878705062:policy/dynamo-read-policy-dev",
            "description": "A policy to allow lambda to read a specific dynamo table",
            "id": "arn:aws:iam::402878705062:policy/dynamo-read-policy-dev",
            "name": "dynamo-read-policy-dev",
            "name_prefix": null,
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"dynamodb:Query\",\"dynamodb:PutItem\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:dynamodb:us-west-2:402878705062:table/dev-readings\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAV3TLRFWTOPHJ7UPAA",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_dev.aws_dynamodb_table.readings"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_dev",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "lambda_exec",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::402878705062:role/serverless_lambda_dev",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2021-12-10T05:03:04Z",
            "description": "",
            "force_detach_policies": false,
            "id": "serverless_lambda_dev",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::402878705062:policy/dynamo-read-policy-dev",
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
            ],
            "max_session_duration": 3600,
            "name": "serverless_lambda_dev",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAV3TLRFWTGV25WJGSL"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.airquality_dev",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "lambda_dynamo_read_policy_attachment",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "serverless_lambda_dev-20211210050306303400000001",
            "policy_arn": "arn:aws:iam::402878705062:policy/dynamo-read-policy-dev",
            "role": "serverless_lambda_dev"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_dev.aws_dynamodb_table.readings",
            "module.airquality_dev.aws_iam_policy.lambda_dynamo_read_policy",
            "module.airquality_dev.aws_iam_role.lambda_exec"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_dev",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "lambda_execution_policy_attachment",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "serverless_lambda_dev-20211210050306325000000002",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            "role": "serverless_lambda_dev"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_dev.aws_iam_role.lambda_exec"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_dev",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "airquality_app",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-west-2:402878705062:function:airquality-web-dev",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [
              {
                "variables": {
                  "TZ": "America/Los_Angeles"
                }
              }
            ],
            "file_system_config": [],
            "filename": null,
            "function_name": "airquality-web-dev",
            "handler": "app.lambda.handler",
            "id": "airquality-web-dev",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:402878705062:function:airquality-web-dev/invocations",
            "kms_key_arn": "",
            "last_modified": "2021-12-10T05:22:23.000+0000",
            "layers": [],
            "memory_size": 128,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-west-2:402878705062:function:airquality-web-dev:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::402878705062:role/serverless_lambda_dev",
            "runtime": "python3.8",
            "s3_bucket": "airquality-lambda-dev",
            "s3_key": "airquality.zip",
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "source_code_hash": "z4GYYYA5rSpQgmWsvuJExmXDdn43X8Tr2mrTCYQT9Z8=",
            "source_code_size": 2937,
            "tags": {},
            "tags_all": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.airquality_dev.aws_iam_role.lambda_exec",
            "module.airquality_dev.aws_s3_bucket.airquality_lambda_bucket",
            "module.airquality_dev.aws_s3_bucket_object.lambda_package",
            "module.airquality_dev.data.archive_file.lambda_airquality_archive"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_dev",
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "api_gw",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "airquality-web-dev",
            "id": "AllowExecutionFromAPIGateway",
            "principal": "apigateway.amazonaws.com",
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-west-2:402878705062:i2d54e8j98/*/*",
            "statement_id": "AllowExecutionFromAPIGateway",
            "statement_id_prefix": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_dev.aws_apigatewayv2_api.lambda",
            "module.airquality_dev.aws_iam_role.lambda_exec",
            "module.airquality_dev.aws_lambda_function.airquality_app",
            "module.airquality_dev.aws_s3_bucket.airquality_lambda_bucket",
            "module.airquality_dev.aws_s3_bucket_object.lambda_package",
            "module.airquality_dev.data.archive_file.lambda_airquality_archive"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_dev",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "airquality_bucket",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": "public-read",
            "arn": "arn:aws:s3:::home-airquality-dev",
            "bucket": "home-airquality-dev",
            "bucket_domain_name": "home-airquality-dev.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "home-airquality-dev.s3.us-west-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "grant": [],
            "hosted_zone_id": "Z3BJ6K6RIION7M",
            "id": "home-airquality-dev",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "policy": "{\"Statement\":[{\"Action\":\"s3:GetObject\",\"Effect\":\"Allow\",\"Principal\":\"*\",\"Resource\":\"arn:aws:s3:::home-airquality-dev/*\",\"Sid\":\"PublicReadGetObject\"}],\"Version\":\"2012-10-17\"}",
            "region": "us-west-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": {},
            "tags_all": {},
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [
              {
                "error_document": "",
                "index_document": "index.html",
                "redirect_all_requests_to": "",
                "routing_rules": ""
              }
            ],
            "website_domain": "s3-website-us-west-2.amazonaws.com",
            "website_endpoint": "home-airquality-dev.s3-website-us-west-2.amazonaws.com"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.airquality_dev",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "airquality_lambda_bucket",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": "private",
            "arn": "arn:aws:s3:::airquality-lambda-dev",
            "bucket": "airquality-lambda-dev",
            "bucket_domain_name": "airquality-lambda-dev.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "airquality-lambda-dev.s3.us-west-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "grant": [],
            "hosted_zone_id": "Z3BJ6K6RIION7M",
            "id": "airquality-lambda-dev",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "policy": null,
            "region": "us-west-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": {},
            "tags_all": {},
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.airquality_dev",
      "mode": "managed",
      "type": "aws_s3_bucket_object",
      "name": "lambda_package",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acl": "private",
            "bucket": "airquality-lambda-dev",
            "bucket_key_enabled": false,
            "cache_control": "",
            "content": null,
            "content_base64": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "binary/octet-stream",
            "etag": "f87e253f3b04ea91b7125e580024e99e",
            "force_destroy": false,
            "id": "airquality.zip",
            "key": "airquality.zip",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "server_side_encryption": "",
            "source": "./airquality.zip",
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {},
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_dev.data.archive_file.lambda_airquality_archive",
            "module.airquality_dev.aws_s3_bucket.airquality_lambda_bucket"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_prod",
      "mode": "data",
      "type": "archive_file",
      "name": "lambda_airquality_archive",
      "provider": "provider[\"registry.terraform.io/hashicorp/archive\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "excludes": null,
            "id": "0a21318d75b83b87d3a16524fa5f2f856246cf0f",
            "output_base64sha256": "z4GYYYA5rSpQgmWsvuJExmXDdn43X8Tr2mrTCYQT9Z8=",
            "output_file_mode": null,
            "output_md5": "f87e253f3b04ea91b7125e580024e99e",
            "output_path": "./airquality.zip",
            "output_sha": "0a21318d75b83b87d3a16524fa5f2f856246cf0f",
            "output_size": 2937,
            "source": [
              {
                "content": "",
                "filename": "app/__init__.py"
              },
              {
                "content": "import dataclasses\n\nclass Particle:\n    TWO_POINT_FIVE = '2.5'\n    TEN = '10'\n\n@dataclasses.dataclass\nclass AQILevel:\n    level_name: str\n    conc_low: float\n    conc_high: float\n    aqi_low: int\n    aqi_high: int\n\nAQI_BREAKPOINTS = [\n    ('Good', 0, 50),\n    ('Moderate', 51, 100),\n    ('USG', 101, 150),\n    ('Unhealth', 151, 200),\n    ('Very Unhealthy', 201, 300),\n    ('Hazardous', 301, 500)\n]\n\nLEVELS_25 = [\n    (0, 12),\n    (12.1, 35.4),\n    (35.5, 55.4),\n    (55.5, 150.4),\n    (150.5, 250.4),\n    (250.5, 500.4)\n]\n\nLEVELS_10 = [\n    (0, 54),\n    (55, 154),\n    (155, 254),\n    (255, 354),\n    (355, 424),\n    (425, 604),\n]\n\ndef get_aqi(conc: float, particle: Particle) -\u003e float:\n    if particle == Particle.TWO_POINT_FIVE:\n        levels = LEVELS_25\n        conc = round(conc, 1)\n    else:\n        levels = LEVELS_10\n        conc = round(conc)\n\n    aqi_levels = [\n        AQILevel(breaks[0], lvl[0], lvl[1], breaks[1], breaks[2])\n        for breaks, lvl in zip(AQI_BREAKPOINTS, levels)\n    ]\n\n    for level in aqi_levels:\n        if conc \u003e level.conc_high:\n            continue\n        else:\n            break\n\n    aqi = ((level.aqi_high - level.aqi_low)/(level.conc_high-level.conc_low)) * (conc - level.conc_low) + level.aqi_low\n    return round(aqi)\n\n\nif __name__ == \"__main__\":\n    print(get_aqi(20, LEVELS_25))",
                "filename": "app/aqi.py"
              },
              {
                "content": "import dataclasses\nimport json\nimport os\nfrom collections import defaultdict\nfrom datetime import datetime, timedelta\n\nfrom boto3.dynamodb.conditions import Key\n\nfrom app.aqi import get_aqi, Particle\nfrom app.connection import readings\n\nTIME_INTERVAL_MINUTES = 20\nDEV_ENVIRON_LAST_DAY = datetime.fromisoformat(\"2021-11-27T20:33:06\")\n\nif os.environ.get('FLASK_ENV') == 'development':\n    last_day = DEV_ENVIRON_LAST_DAY\nelse:\n    last_day = datetime.now() - timedelta(days=1)\n \n \ndef get_last_day(resource=readings, last_day=last_day):\n    items = resource.query(\n        TableName='Readings',\n        KeyConditionExpression=Key('RecordedAt').gt(last_day.isoformat()) \u0026 Key('DeviceId').eq('2A84')\n    )['Items']\n\n    items = sorted(items, key=lambda x: x['RecordedAt'])\n    for res in items:\n        yield datetime.fromisoformat(res['RecordedAt']), float(res['pmi2.5']), float(res['pmi10'])\n\n@dataclasses.dataclass\nclass TimingResponse:\n    recorded_at: datetime\n    aqi_two_point_five: int\n    aqi_ten: int\n \ndef timing_results_to_buckets(results):\n    bucket_marker = results[0].recorded_at \n    buckets = defaultdict(list)\n    for result in results:\n        if result.recorded_at \u003e bucket_marker + timedelta(\n            minutes=TIME_INTERVAL_MINUTES\n        ):\n            bucket_marker = result.recorded_at\n        buckets[bucket_marker].append(result)\n    return buckets\n\ndef average_aqi_from_buckets(buckets):\n    response = []\n    for marker, bucket in buckets.items():\n        two_point_five = [a.aqi_two_point_five for a in bucket]\n        ten = [a.aqi_ten for a in bucket]\n        response.append([\n            marker.isoformat(),\n            round(sum(two_point_five)/len(two_point_five)),\n            round(sum(ten)/len(ten))\n        ])\n    return response\n\ndef get_last_day_bucketed_aqi():\n    results = [\n        TimingResponse(\n            a[0],\n            get_aqi(a[1],Particle.TWO_POINT_FIVE),\n            get_aqi(a[2], Particle.TEN)\n        )\n        for a in get_last_day()\n    ]\n\n    buckets = timing_results_to_buckets(results)\n    return average_aqi_from_buckets(buckets)\n\n",
                "filename": "app/response.py"
              },
              {
                "content": "import datetime\n\nfrom app.connection import client\n\n\ndef dynamo_put(client, device, pmi25, pmi10, recorded_at=None):\n    client.put_item(\n        TableName='Readings',\n        Item={\n            'DeviceId': {\"S\": device},\n            'RecordedAt': {\n                \"S\": recorded_at or datetime.datetime.now().isoformat()\n            },\n            'pmi2.5': {\"N\": str(pmi25)},\n            'pmi10': {\"N\": str(pmi10)}\n        }\n    )\n\ndef write_reading(device, pmi25, pmi10):\n    dynamo_put(client, device, pmi25, pmi10)",
                "filename": "app/reading.py"
              },
              {
                "content": "import json\n\nfrom app.response import get_last_day_bucketed_aqi\nfrom app.reading import write_reading\n\ndef handler(event=None, context=None):\n    if event.get('httpMethod') == \"POST\":\n        data = json.loads(event['body'])\n        write_reading(\n           device=data['device_id'],\n           pmi25=data['pmi2.5'],\n           pmi10=data['pmi10']\n        )\n        body = f'written {event}'\n    else:\n        body = json.dumps(get_last_day_bucketed_aqi())\n\n    response = {\n        'isBase64Encoded': False,\n        \"statusCode\": 200,\n        \"headers\": {},\n        \"body\": body\n    }\n    return response",
                "filename": "app/lambda.py"
              },
              {
                "content": "import os\n\nimport boto3\n\nparameters = {'service_name': 'dynamodb'}\nif os.environ.get('FLASK_ENV') == \"development\":\n    parameters['endpoint_url'] = 'http://dynamodb-local:8000'\n\nclient = boto3.client(**parameters)\nresource = boto3.resource(**parameters)\nreadings = resource.Table('Readings')",
                "filename": "app/connection.py"
              }
            ],
            "source_content": null,
            "source_content_filename": null,
            "source_dir": null,
            "source_file": null,
            "type": "zip"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.airquality_prod",
      "mode": "managed",
      "type": "aws_apigatewayv2_api",
      "name": "lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_endpoint": "https://h9wwkpmvlb.execute-api.us-west-2.amazonaws.com",
            "api_key_selection_expression": "$request.header.x-api-key",
            "arn": "arn:aws:apigateway:us-west-2::/apis/h9wwkpmvlb",
            "body": null,
            "cors_configuration": [
              {
                "allow_credentials": false,
                "allow_headers": [
                  "content-type"
                ],
                "allow_methods": [
                  "GET",
                  "OPTIONS",
                  "POST"
                ],
                "allow_origins": [
                  "*"
                ],
                "expose_headers": [],
                "max_age": 300
              }
            ],
            "credentials_arn": null,
            "description": "",
            "disable_execute_api_endpoint": false,
            "execution_arn": "arn:aws:execute-api:us-west-2:402878705062:h9wwkpmvlb",
            "fail_on_warnings": null,
            "id": "h9wwkpmvlb",
            "name": "airquality_gateway_prod",
            "protocol_type": "HTTP",
            "route_key": null,
            "route_selection_expression": "$request.method $request.path",
            "tags": {},
            "tags_all": {},
            "target": null,
            "version": ""
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.airquality_prod",
      "mode": "managed",
      "type": "aws_apigatewayv2_integration",
      "name": "airquality_reading_data",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_id": "h9wwkpmvlb",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling_strategy": "",
            "credentials_arn": "",
            "description": "",
            "id": "rzoa4ob",
            "integration_method": "POST",
            "integration_response_selection_expression": "",
            "integration_subtype": "",
            "integration_type": "AWS_PROXY",
            "integration_uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:402878705062:function:airquality-web-prod/invocations",
            "passthrough_behavior": "",
            "payload_format_version": "1.0",
            "request_parameters": {},
            "request_templates": {},
            "response_parameters": [],
            "template_selection_expression": "",
            "timeout_milliseconds": 30000,
            "tls_config": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_prod.aws_s3_bucket.airquality_lambda_bucket",
            "module.airquality_prod.aws_s3_bucket_object.lambda_package",
            "module.airquality_prod.data.archive_file.lambda_airquality_archive",
            "module.airquality_prod.aws_apigatewayv2_api.lambda",
            "module.airquality_prod.aws_iam_role.lambda_exec",
            "module.airquality_prod.aws_lambda_function.airquality_app"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_prod",
      "mode": "managed",
      "type": "aws_apigatewayv2_route",
      "name": "get_readings",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_id": "h9wwkpmvlb",
            "api_key_required": false,
            "authorization_scopes": [],
            "authorization_type": "NONE",
            "authorizer_id": "",
            "id": "t86593e",
            "model_selection_expression": "",
            "operation_name": "",
            "request_models": {},
            "request_parameter": [],
            "route_key": "GET /data",
            "route_response_selection_expression": "",
            "target": "integrations/rzoa4ob"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_prod.aws_apigatewayv2_api.lambda",
            "module.airquality_prod.aws_apigatewayv2_integration.airquality_reading_data",
            "module.airquality_prod.aws_iam_role.lambda_exec",
            "module.airquality_prod.aws_lambda_function.airquality_app",
            "module.airquality_prod.aws_s3_bucket.airquality_lambda_bucket",
            "module.airquality_prod.aws_s3_bucket_object.lambda_package",
            "module.airquality_prod.data.archive_file.lambda_airquality_archive"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_prod",
      "mode": "managed",
      "type": "aws_apigatewayv2_stage",
      "name": "lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_log_settings": [
              {
                "destination_arn": "arn:aws:logs:us-west-2:402878705062:log-group:/aws/api_gw/airquality_gateway_prod",
                "format": "{\"httpMethod\":\"$context.httpMethod\",\"integrationErrorMessage\":\"$context.integrationErrorMessage\",\"protocol\":\"$context.protocol\",\"requestId\":\"$context.requestId\",\"requestTime\":\"$context.requestTime\",\"resourcePath\":\"$context.resourcePath\",\"responseLength\":\"$context.responseLength\",\"routeKey\":\"$context.routeKey\",\"sourceIp\":\"$context.identity.sourceIp\",\"status\":\"$context.status\"}"
              }
            ],
            "api_id": "h9wwkpmvlb",
            "arn": "arn:aws:apigateway:us-west-2::/apis/h9wwkpmvlb/stages/prod",
            "auto_deploy": true,
            "client_certificate_id": "",
            "default_route_settings": [
              {
                "data_trace_enabled": false,
                "detailed_metrics_enabled": false,
                "logging_level": "",
                "throttling_burst_limit": 0,
                "throttling_rate_limit": 0
              }
            ],
            "deployment_id": "5gztg4",
            "description": "",
            "execution_arn": "arn:aws:execute-api:us-west-2:402878705062:h9wwkpmvlb/prod",
            "id": "prod",
            "invoke_url": "https://h9wwkpmvlb.execute-api.us-west-2.amazonaws.com/prod",
            "name": "prod",
            "route_settings": [],
            "stage_variables": {},
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_prod.aws_apigatewayv2_api.lambda",
            "module.airquality_prod.aws_cloudwatch_log_group.api_gw"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_prod",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "airquality_web",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-west-2:402878705062:log-group:/aws/lambda/airquality-web-prod",
            "id": "/aws/lambda/airquality-web-prod",
            "kms_key_id": "",
            "name": "/aws/lambda/airquality-web-prod",
            "name_prefix": null,
            "retention_in_days": 30,
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_prod.aws_lambda_function.airquality_app",
            "module.airquality_prod.aws_s3_bucket.airquality_lambda_bucket",
            "module.airquality_prod.aws_s3_bucket_object.lambda_package",
            "module.airquality_prod.data.archive_file.lambda_airquality_archive",
            "module.airquality_prod.aws_iam_role.lambda_exec"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_prod",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "api_gw",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-west-2:402878705062:log-group:/aws/api_gw/airquality_gateway_prod",
            "id": "/aws/api_gw/airquality_gateway_prod",
            "kms_key_id": "",
            "name": "/aws/api_gw/airquality_gateway_prod",
            "name_prefix": null,
            "retention_in_days": 30,
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_prod.aws_apigatewayv2_api.lambda"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_prod",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "readings",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-west-2:402878705062:table/prod-readings",
            "attribute": [
              {
                "name": "DeviceId",
                "type": "S"
              },
              {
                "name": "RecordedAt",
                "type": "S"
              }
            ],
            "billing_mode": "PAY_PER_REQUEST",
            "global_secondary_index": [],
            "hash_key": "DeviceId",
            "id": "prod-readings",
            "local_secondary_index": [],
            "name": "prod-readings",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": "RecordedAt",
            "read_capacity": 0,
            "replica": [],
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false,
                "kms_key_arn": ""
              }
            ],
            "write_capacity": 0
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.airquality_prod",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "lambda_dynamo_read_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::402878705062:policy/dynamo-read-policy-prod",
            "description": "A policy to allow lambda to read a specific dynamo table",
            "id": "arn:aws:iam::402878705062:policy/dynamo-read-policy-prod",
            "name": "dynamo-read-policy-prod",
            "name_prefix": null,
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"dynamodb:Query\",\"dynamodb:PutItem\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:dynamodb:us-west-2:402878705062:table/prod-readings\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAV3TLRFWTGGSVGH3X2",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_prod.aws_dynamodb_table.readings"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_prod",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "lambda_exec",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::402878705062:role/serverless_lambda_prod",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2021-12-10T05:16:03Z",
            "description": "",
            "force_detach_policies": false,
            "id": "serverless_lambda_prod",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::402878705062:policy/dynamo-read-policy-prod",
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
            ],
            "max_session_duration": 3600,
            "name": "serverless_lambda_prod",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAV3TLRFWTEEQQ7FHDL"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.airquality_prod",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "lambda_dynamo_read_policy_attachment",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "serverless_lambda_prod-20211210051614369600000002",
            "policy_arn": "arn:aws:iam::402878705062:policy/dynamo-read-policy-prod",
            "role": "serverless_lambda_prod"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_prod.aws_dynamodb_table.readings",
            "module.airquality_prod.aws_iam_policy.lambda_dynamo_read_policy",
            "module.airquality_prod.aws_iam_role.lambda_exec"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_prod",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "lambda_execution_policy_attachment",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "serverless_lambda_prod-20211210051604776600000001",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            "role": "serverless_lambda_prod"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_prod.aws_iam_role.lambda_exec"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_prod",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "airquality_app",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-west-2:402878705062:function:airquality-web-prod",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [
              {
                "variables": {
                  "TZ": "America/Los_Angeles"
                }
              }
            ],
            "file_system_config": [],
            "filename": null,
            "function_name": "airquality-web-prod",
            "handler": "app.lambda.handler",
            "id": "airquality-web-prod",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:402878705062:function:airquality-web-prod/invocations",
            "kms_key_arn": "",
            "last_modified": "2021-12-10T05:22:23.000+0000",
            "layers": [],
            "memory_size": 128,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-west-2:402878705062:function:airquality-web-prod:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::402878705062:role/serverless_lambda_prod",
            "runtime": "python3.8",
            "s3_bucket": "airquality-lambda-prod",
            "s3_key": "airquality.zip",
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "source_code_hash": "z4GYYYA5rSpQgmWsvuJExmXDdn43X8Tr2mrTCYQT9Z8=",
            "source_code_size": 2937,
            "tags": {},
            "tags_all": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.airquality_prod.aws_iam_role.lambda_exec",
            "module.airquality_prod.aws_s3_bucket.airquality_lambda_bucket",
            "module.airquality_prod.aws_s3_bucket_object.lambda_package",
            "module.airquality_prod.data.archive_file.lambda_airquality_archive"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_prod",
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "api_gw",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "airquality-web-prod",
            "id": "AllowExecutionFromAPIGateway",
            "principal": "apigateway.amazonaws.com",
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-west-2:402878705062:h9wwkpmvlb/*/*",
            "statement_id": "AllowExecutionFromAPIGateway",
            "statement_id_prefix": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_prod.aws_s3_bucket_object.lambda_package",
            "module.airquality_prod.data.archive_file.lambda_airquality_archive",
            "module.airquality_prod.aws_apigatewayv2_api.lambda",
            "module.airquality_prod.aws_iam_role.lambda_exec",
            "module.airquality_prod.aws_lambda_function.airquality_app",
            "module.airquality_prod.aws_s3_bucket.airquality_lambda_bucket"
          ]
        }
      ]
    },
    {
      "module": "module.airquality_prod",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "airquality_bucket",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": "public-read",
            "arn": "arn:aws:s3:::home-airquality-prod",
            "bucket": "home-airquality-prod",
            "bucket_domain_name": "home-airquality-prod.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "home-airquality-prod.s3.us-west-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "grant": [],
            "hosted_zone_id": "Z3BJ6K6RIION7M",
            "id": "home-airquality-prod",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "policy": "{\"Statement\":[{\"Action\":\"s3:GetObject\",\"Effect\":\"Allow\",\"Principal\":\"*\",\"Resource\":\"arn:aws:s3:::home-airquality-prod/*\",\"Sid\":\"PublicReadGetObject\"}],\"Version\":\"2012-10-17\"}",
            "region": "us-west-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": {},
            "tags_all": {},
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [
              {
                "error_document": "",
                "index_document": "index.html",
                "redirect_all_requests_to": "",
                "routing_rules": ""
              }
            ],
            "website_domain": "s3-website-us-west-2.amazonaws.com",
            "website_endpoint": "home-airquality-prod.s3-website-us-west-2.amazonaws.com"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.airquality_prod",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "airquality_lambda_bucket",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": "private",
            "arn": "arn:aws:s3:::airquality-lambda-prod",
            "bucket": "airquality-lambda-prod",
            "bucket_domain_name": "airquality-lambda-prod.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "airquality-lambda-prod.s3.us-west-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "grant": [],
            "hosted_zone_id": "Z3BJ6K6RIION7M",
            "id": "airquality-lambda-prod",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "policy": null,
            "region": "us-west-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": {},
            "tags_all": {},
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.airquality_prod",
      "mode": "managed",
      "type": "aws_s3_bucket_object",
      "name": "lambda_package",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acl": "private",
            "bucket": "airquality-lambda-prod",
            "bucket_key_enabled": false,
            "cache_control": "",
            "content": null,
            "content_base64": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "binary/octet-stream",
            "etag": "f87e253f3b04ea91b7125e580024e99e",
            "force_destroy": false,
            "id": "airquality.zip",
            "key": "airquality.zip",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "server_side_encryption": "",
            "source": "./airquality.zip",
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {},
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.airquality_prod.aws_s3_bucket.airquality_lambda_bucket",
            "module.airquality_prod.data.archive_file.lambda_airquality_archive"
          ]
        }
      ]
    }
  ]
}
